"""create tables

Revision ID: bc00d5977e8d
Revises: 
Create Date: 2024-04-29 07:44:07.605295

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
import sqlalchemy_utils
import uuid

# revision identifiers, used by Alembic.
revision: str = 'bc00d5977e8d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('movies',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='ID'),
    sa.Column('title', sa.String(length=255), nullable=False, comment='タイトル'),
    sa.Column('rental_type', sa.Enum('NEW_RELEASE', 'SEMI_NEW_RELEASE', 'OLD_RELEASE', name='rentaltype'), nullable=False, comment='レンタルタイプ'),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False, comment='作成日時'),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False, comment='更新日時'),
    sa.PrimaryKeyConstraint('id'),
    comment='映画情報'
    )
    op.create_table('rentals',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='ID'),
    sa.Column('rental_date', sa.DateTime(), nullable=False, comment='レンタル日'),
    sa.Column('return_due_date', sa.DateTime(), nullable=False, comment='返却期限日'),
    sa.Column('retrun_date', sa.DateTime(), nullable=True, comment='返却日'),
    sa.Column('rental_status', sa.Enum('RENTAL', 'RETURNED', 'OVERDUE', name='rentalstatustype'), nullable=False, comment='レンタルステータス'),
    sa.Column('fee', sa.Integer(), nullable=False, comment='料金'),
    sa.Column('created_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp'), nullable=False, comment='作成日時'),
    sa.Column('updated_at', mysql.TIMESTAMP(), server_default=sa.text('current_timestamp on update current_timestamp'), nullable=False, comment='更新日時'),
    sa.PrimaryKeyConstraint('id'),
    comment='レンタル情報'
    )
    op.create_table('rental_movie',
    sa.Column('rental_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='レンタルID'),
    sa.Column('movie_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False)            , default=uuid.uuid4, nullable=False, comment='映画ID'),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.ForeignKeyConstraint(['rental_id'], ['rentals.id'], ),
    sa.PrimaryKeyConstraint('rental_id', 'movie_id'),
    comment='レンタル映画情報'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rental_movie')
    op.drop_table('rentals')
    op.drop_table('movies')
    # ### end Alembic commands ###
